# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

pool:
  vmImage: ubuntu-latest

steps:

- task: Gradle@3
  inputs:
    gradleWrapperFile: 'gradlew'
    tasks: 'build'
    publishJUnitResults: true
    testResultsFiles: '**/TEST-*.xml'
    javaHomeOption: 'JDKVersion'
    jdkVersionOption: '1.11'
    sonarQubeRunAnalysis: false
    spotBugsAnalysis: false

- task: SonarCloudPrepare@1
  inputs:
    SonarCloud: 'sonarCloud'
    organization: 'devops-semadrid'
    projectKey: 'DevOps-semadrid_pet-clinic'
    projectName: 'pet-clinic'
  displayName: 'Prepare SonarCloud'
  
- task: Gradle@3
  inputs:
    gradleWrapperFile: 'gradlew'
    tasks: 'sonarqube'
    publishJUnitResults: true
    testResultsFiles: '**/TEST-*.xml'
    javaHomeOption: 'JDKVersion'
    sonarQubeRunAnalysis: true
    sqGradlePluginVersionChoice: 'specify'
    sonarQubeGradlePluginVersion: '3.3'
    spotBugsAnalysis: false
  displayName: SonarCloud Analysis

- task: Docker@2
  inputs:
    containerRegistry: 'Docker'
    command: 'login'
  displayName: Docker Login

- task: Docker@2
  inputs:
    containerRegistry: 'Docker'
    repository: 'semadrid/pet-clinic'
    command: 'build'
    Dockerfile: '**/Dockerfile'
    tags: 'latest'
  displayName: Docker build
    
- task: Docker@2
  inputs:
    containerRegistry: 'Docker'
    repository: 'semadrid/pet-clinic'
    command: 'push'
    tags: 'latest'
  displayName: Docker Push

- task: KubectlInstaller@0
  inputs:
    kubectlVersion: 'latest'
  displayName: Instal kubectl

